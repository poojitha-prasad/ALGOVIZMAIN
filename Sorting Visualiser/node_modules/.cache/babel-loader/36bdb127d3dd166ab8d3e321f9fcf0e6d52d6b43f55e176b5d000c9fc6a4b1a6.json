{"ast":null,"code":"const getInsertionSortAnimations = array => {\n  const animations = []; // { comparingELement1, comparingElement2, doSwap, sortedTill }\n\n  // Push animation for sorting first element.\n  animations.push(0, 0, false, 0);\n  for (let i = 1; i < array.length; i++) {\n    let key = array[i],\n      j = i - 1;\n\n    // Push animation for comparing 2 elements\n    animations.push(i, j, false, i - 1);\n    while (j >= 0 && array[j] > key) {\n      // Swapping 2 values\n      [array[j], array[j + 1]] = [array[j + 1], array[j]];\n      // Push animation for comparing 2 elements\n      animations.push(j, j + 1, false, i);\n      // Push animation for swapping 2 elements\n      animations.push(j, j + 1, true, i);\n      j--;\n    }\n  }\n\n  // Push animation to know that it's the end of the animations.\n  animations.push(array.length - 1, array.length - 1, false, array.length - 1);\n  return animations;\n};\nexport default getInsertionSortAnimations;","map":{"version":3,"names":["getInsertionSortAnimations","array","animations","push","i","length","key","j"],"sources":["/Users/poojithaprasad/algovizmain/pushcodefolder/Dal-Go--Data-Structure-and-Algorithm-Visualiser/Sorting Visualiser/src/SortingVisualizer/SortingAlgorithms/InsertionSort/getInsertionSortAnimations.js"],"sourcesContent":["const getInsertionSortAnimations = (array) => {\n  const animations = []; // { comparingELement1, comparingElement2, doSwap, sortedTill }\n\n  // Push animation for sorting first element.\n  animations.push(0, 0, false, 0);\n\n  for (let i = 1; i < array.length; i++) {\n    let key = array[i],\n      j = i - 1;\n\n    // Push animation for comparing 2 elements\n    animations.push(i, j, false, i - 1);\n    while (j >= 0 && array[j] > key) {\n      // Swapping 2 values\n      [array[j], array[j + 1]] = [array[j + 1], array[j]];\n      // Push animation for comparing 2 elements\n      animations.push(j, j + 1, false, i);\n      // Push animation for swapping 2 elements\n      animations.push(j, j + 1, true, i);\n      j--;\n    }\n  }\n\n  // Push animation to know that it's the end of the animations.\n  animations.push(array.length - 1, array.length - 1, false, array.length - 1);\n  return animations;\n};\n\nexport default getInsertionSortAnimations;\n"],"mappings":"AAAA,MAAMA,0BAA0B,GAAIC,KAAK,IAAK;EAC5C,MAAMC,UAAU,GAAG,EAAE,CAAC,CAAC;;EAEvB;EACAA,UAAU,CAACC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;EAE/B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,KAAK,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;IACrC,IAAIE,GAAG,GAAGL,KAAK,CAACG,CAAC,CAAC;MAChBG,CAAC,GAAGH,CAAC,GAAG,CAAC;;IAEX;IACAF,UAAU,CAACC,IAAI,CAACC,CAAC,EAAEG,CAAC,EAAE,KAAK,EAAEH,CAAC,GAAG,CAAC,CAAC;IACnC,OAAOG,CAAC,IAAI,CAAC,IAAIN,KAAK,CAACM,CAAC,CAAC,GAAGD,GAAG,EAAE;MAC/B;MACA,CAACL,KAAK,CAACM,CAAC,CAAC,EAAEN,KAAK,CAACM,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAACN,KAAK,CAACM,CAAC,GAAG,CAAC,CAAC,EAAEN,KAAK,CAACM,CAAC,CAAC,CAAC;MACnD;MACAL,UAAU,CAACC,IAAI,CAACI,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAE,KAAK,EAAEH,CAAC,CAAC;MACnC;MACAF,UAAU,CAACC,IAAI,CAACI,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAE,IAAI,EAAEH,CAAC,CAAC;MAClCG,CAAC,EAAE;IACL;EACF;;EAEA;EACAL,UAAU,CAACC,IAAI,CAACF,KAAK,CAACI,MAAM,GAAG,CAAC,EAAEJ,KAAK,CAACI,MAAM,GAAG,CAAC,EAAE,KAAK,EAAEJ,KAAK,CAACI,MAAM,GAAG,CAAC,CAAC;EAC5E,OAAOH,UAAU;AACnB,CAAC;AAED,eAAeF,0BAA0B"},"metadata":{},"sourceType":"module","externalDependencies":[]}