{"ast":null,"code":"var _jsxFileName = \"/Users/poojithaprasad/algovizmain/Dal-Go--Data-Structure-and-Algorithm-Visualiser/Sorting Visualiser/src/SortingVisualizer/SortingVisualizer.jsx\";\nimport React, { Component } from \"react\";\n// .. COMPONENTS .. //\nimport Header from \"./Components/Header/Header.jsx\";\nimport ButtonsBar from \"./Components/ButtonsBar/ButtonsBar.jsx\";\nimport ArrayBar from \"./Components/ArrayBar/ArrayBar.jsx\";\nimport RangeSlider from \"./Components/RangeSliders/RangeSlider.jsx\";\n// .. HELPER FUNCTIONS .. //\nimport { randomIntFromInterval, playAudio } from \"./HelperFunctions.js\";\n// .. ALGORITHMS .. //\nimport BubbleSort from \"./SortingAlgorithms/BubbleSort/BubbleSort.js\";\nimport SelectionSort from \"./SortingAlgorithms/SelectionSort/SelectionSort.js\";\nimport InsertionSort from \"./SortingAlgorithms/InsertionSort/InsertionSort.js\";\n// .. STYLE .. //\nimport \"./SortingVisualizer.css\";\n// .. SOUNDS .. //\nimport ResetEffect from \"./sounds/ResetEffect.mp3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class SortingVisualizer extends Component {\n  constructor(props) {\n    super(props);\n    // ******************************************************************************* //\n    // ## Handles if the \"Array Size\" slider is changed. ## //\n    this.onChangeArrayBarRangeSlider = (event, value) => {\n      this.setState({\n        numberOfArrayBars: value\n      });\n      this.generateNewArray();\n    };\n    // ## Handles if the \"Animation Speed\" slider is changed. ## //\n    this.onChangeAnimationSpeedRangeSlider = (event, value) => {\n      this.setState({\n        animationSpeed: value\n      });\n    };\n    // ******************************************************************************* //\n    // ## Calls the BubbleSort component/function. ## //\n    this.bubbleSort = () => {\n      BubbleSort(this.state.array, this.state.animationSpeed);\n    };\n    // ## Calls the SelectionSort component/function. ## //\n    this.selectionSort = () => {\n      SelectionSort(this.state.array, this.state.animationSpeed);\n    };\n    // ## Calls the InsertionSort component/function. ## //\n    this.insertionSort = () => {\n      InsertionSort(this.state.array, this.state.animationSpeed);\n    };\n    this.state = {\n      //  // ##\n      //        Initializing in state because:\n      //         1. It might be changed later by the user.\n      //         2. The change value must be re-rendered.\n      // ## //\n      array: [],\n      animationSpeed: 50,\n      numberOfArrayBars: 10,\n      userInputArray: []\n    };\n    this.handleUserInputArray = event => {\n      const value = event.target.value;\n      const array = value.split(\",\").map(Number); // Convert input string to array of numbers\n      this.setState({\n        userInputArray: array\n      });\n    };\n    this.generateNewArray = this.generateNewArray.bind(this);\n    this.bubbleSort = this.bubbleSort.bind(this);\n    this.selectionSort = this.selectionSort.bind(this);\n    this.insertionSort = this.insertionSort.bind(this);\n    this.onChangeArrayBarRangeSlider = this.onChangeArrayBarRangeSlider.bind(this);\n    this.onChangeAnimationSpeedRangeSlider = this.onChangeAnimationSpeedRangeSlider.bind(this);\n  }\n\n  // ## This function generates the array before the page is rendere. ## //\n  componentDidMount() {\n    this.generateNewArray();\n  }\n\n  // ## This function generates new random array of size \"numberOfArrayBars\". ## //\n  generateNewArray() {\n    let array = [];\n    if (this.state.userInputArray.length > 0) {\n      // If user input array exists\n      array = [...this.state.userInputArray];\n    } else {\n      // Generate random array\n      for (let i = 0; i < this.state.numberOfArrayBars; i++) {\n        array.push(randomIntFromInterval(5, 70));\n      }\n    }\n    playAudio(ResetEffect);\n    this.setState({\n      array\n    });\n  }\n  // ******************************************************************************* //\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonsBar, {\n        generateNewArray: this.generateNewArray,\n        bubbleSort: this.bubbleSort,\n        selectionSort: this.selectionSort,\n        insertionSort: this.insertionSort\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"user-input\",\n          children: \"Input your own array:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"user-input\",\n          name: \"user-input\",\n          onChange: this.handleUserInputArray\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ArrayBar, {\n        array: this.state.array\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RangeSlider, {\n        numberOfArrayBars: this.state.numberOfArrayBars,\n        animationSpeed: this.state.animationSpeed,\n        onChangeArrayBarRangeSlider: this.onChangeArrayBarRangeSlider,\n        onChangeAnimationSpeedRangeSlider: this.onChangeAnimationSpeedRangeSlider\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","Header","ButtonsBar","ArrayBar","RangeSlider","randomIntFromInterval","playAudio","BubbleSort","SelectionSort","InsertionSort","ResetEffect","jsxDEV","_jsxDEV","SortingVisualizer","constructor","props","onChangeArrayBarRangeSlider","event","value","setState","numberOfArrayBars","generateNewArray","onChangeAnimationSpeedRangeSlider","animationSpeed","bubbleSort","state","array","selectionSort","insertionSort","userInputArray","handleUserInputArray","target","split","map","Number","bind","componentDidMount","length","i","push","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","name","onChange"],"sources":["/Users/poojithaprasad/algovizmain/Dal-Go--Data-Structure-and-Algorithm-Visualiser/Sorting Visualiser/src/SortingVisualizer/SortingVisualizer.jsx"],"sourcesContent":["import React, { Component } from \"react\";\n// .. COMPONENTS .. //\nimport Header from \"./Components/Header/Header.jsx\";\nimport ButtonsBar from \"./Components/ButtonsBar/ButtonsBar.jsx\";\nimport ArrayBar from \"./Components/ArrayBar/ArrayBar.jsx\";\nimport RangeSlider from \"./Components/RangeSliders/RangeSlider.jsx\";\n// .. HELPER FUNCTIONS .. //\nimport { randomIntFromInterval, playAudio } from \"./HelperFunctions.js\";\n// .. ALGORITHMS .. //\nimport BubbleSort from \"./SortingAlgorithms/BubbleSort/BubbleSort.js\";\nimport SelectionSort from \"./SortingAlgorithms/SelectionSort/SelectionSort.js\";\nimport InsertionSort from \"./SortingAlgorithms/InsertionSort/InsertionSort.js\";\n// .. STYLE .. //\nimport \"./SortingVisualizer.css\";\n// .. SOUNDS .. //\nimport ResetEffect from \"./sounds/ResetEffect.mp3\";\n\nexport default class SortingVisualizer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      //  // ##\n      //        Initializing in state because:\n      //         1. It might be changed later by the user.\n      //         2. The change value must be re-rendered.\n      // ## //\n      array: [],\n      animationSpeed: 50,\n      numberOfArrayBars: 10,\n      userInputArray: []\n    };\n    this.handleUserInputArray = (event) => {\n      const value = event.target.value;\n      const array = value.split(\",\").map(Number); // Convert input string to array of numbers\n      this.setState({ userInputArray: array });\n    };\n    \n\n    this.generateNewArray = this.generateNewArray.bind(this);\n    this.bubbleSort = this.bubbleSort.bind(this);\n    this.selectionSort = this.selectionSort.bind(this);\n    this.insertionSort = this.insertionSort.bind(this);\n    this.onChangeArrayBarRangeSlider = this.onChangeArrayBarRangeSlider.bind(\n      this\n    );\n    this.onChangeAnimationSpeedRangeSlider = this.onChangeAnimationSpeedRangeSlider.bind(\n      this\n    );\n  }\n\n  // ## This function generates the array before the page is rendere. ## //\n  componentDidMount() {\n    this.generateNewArray();\n  }\n\n  // ## This function generates new random array of size \"numberOfArrayBars\". ## //\n  generateNewArray() {\n    let array = [];\n  if (this.state.userInputArray.length > 0) { // If user input array exists\n    array = [...this.state.userInputArray];\n  } else { // Generate random array\n    for (let i = 0; i < this.state.numberOfArrayBars; i++) {\n      array.push(randomIntFromInterval(5, 70));\n    }\n  }\n  playAudio(ResetEffect);\n  this.setState({ array });\n  }\n\n  // ******************************************************************************* //\n\n  // ## Handles if the \"Array Size\" slider is changed. ## //\n  onChangeArrayBarRangeSlider = (event, value) => {\n    this.setState({ numberOfArrayBars: value });\n    this.generateNewArray();\n  };\n\n  // ## Handles if the \"Animation Speed\" slider is changed. ## //\n  onChangeAnimationSpeedRangeSlider = (event, value) => {\n    this.setState({ animationSpeed: value });\n  };\n\n  // ******************************************************************************* //\n\n  // ## Calls the BubbleSort component/function. ## //\n  bubbleSort = () => {\n    BubbleSort(this.state.array, this.state.animationSpeed);\n  };\n\n  // ## Calls the SelectionSort component/function. ## //\n  selectionSort = () => {\n    SelectionSort(this.state.array, this.state.animationSpeed);\n  };\n\n  // ## Calls the InsertionSort component/function. ## //\n  insertionSort = () => {\n    InsertionSort(this.state.array, this.state.animationSpeed);\n  };\n\n  // ******************************************************************************* //\n\n  render() {\n    return (\n      <div className=\"main-container\">\n        {/* --------------------- HEADER : 8% Height --------------------- */}\n        <Header />\n\n        {/* --------------------- BUTTONS : 10% Height --------------------- */}\n        <ButtonsBar\n          generateNewArray={this.generateNewArray}\n          bubbleSort={this.bubbleSort}\n          selectionSort={this.selectionSort}\n          insertionSort={this.insertionSort}\n        />\n        {/* --------------------- USER INPUT : 3% Height --------------------- */}\n        <div className=\"input-container\">\n         <label htmlFor=\"user-input\">Input your own array:</label>\n         <input type=\"text\" id=\"user-input\" name=\"user-input\" onChange={this.handleUserInputArray} />\n        </div>\n\n\n        {/* --------------------- BARS : 74% Height --------------------- */}\n        <ArrayBar array={this.state.array} />\n\n        {/* --------------------- SLIDERS : 8% Height --------------------- */}\n        <RangeSlider\n          numberOfArrayBars={this.state.numberOfArrayBars}\n          animationSpeed={this.state.animationSpeed}\n          onChangeArrayBarRangeSlider={this.onChangeArrayBarRangeSlider}\n          onChangeAnimationSpeedRangeSlider={\n            this.onChangeAnimationSpeedRangeSlider\n          }\n        />\n      </div>\n      \n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}